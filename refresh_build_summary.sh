#!/bin/bash

TIMESTAMP_START=`TZ='Australia/Canberra' date "+%Y-%m-%d %H:%M:%S"`

temp=`basename $0`
TMP_FILE_DIR=`mktemp -d /tmp/${temp}.XXXXXX` || exit 1
cd $TMP_FILE_DIR

travis_build_url="$1";
repo_slug=`echo $travis_build_url | sed -e 's/^https:\/\/travis-ci\.org\///g' -e 's/\/builds\/[0-9]*$//g'`
echo "\`last build:\` **$TIMESTAMP_START**   [$repo_slug]($travis_build_url)" >> summary.md;
echo "" >> summary.md

wget -q -O githubapi-get-all-repos.sh                          https://raw.githubusercontent.com/AtlasOfLivingAustralia/travis-build-configuration/master/bin/githubapi-get-all-repos.sh;
wget -q -O generate-github-travis-build-summary-with-grails.sh https://raw.githubusercontent.com/AtlasOfLivingAustralia/travis-build-configuration/master/bin/generate-github-travis-build-summary-with-grails.sh;
wget -q -O repo2war-name.lookup                                https://raw.githubusercontent.com/AtlasOfLivingAustralia/travis-build-configuration/master/bin/repo2war-name.lookup;
chmod +x *.sh;

./githubapi-get-all-repos.sh AtlasOfLivingAustralia $GIST_TOKEN | xargs ./generate-github-travis-build-summary-with-grails.sh AtlasOfLivingAustralia >> summary.md;

# this does not have to be done this (although very flexible) way; if you simply setup a git/github user on the machine/user profile
# that is going to be running this script; then you can get rid of all these git config lines, and move onto the git clone directly
git config --global user.name    "mbohun";
git config --global user.email   "martin.bohun@gmail.com";
git config --global push.default matching;

git clone https://$GIST_TOKEN:x-oauth-basic@gist.github.com/ee2345d4c8a80ede2628.git build_summary_table_gist.git;
cd build_summary_table_gist.git;
cp ../summary.md ala_build_summary_with_emoji.md;
git commit ala_build_summary_with_emoji.md -m "GENERATED by github webhooks listener on $HOSTNAME in response to: $travis_build_url";
git push -q

# cleanup
cd /tmp
rm -rf $TMP_FILE_DIR
